<#@ output extension=".cs"#>
<#@ import namespace="System.Collections.Generic" #>
<#
    Dictionary<string, string> types = new Dictionary<string, string>() 
    {
        {"byte", "Byte"},
        {"short", "Int16"},
        {"int", "Int32"},
        {"long", "Int64"},
        {"sbyte", "SByte"},
        {"ushort", "UInt16"},
        {"uint", "UInt32"},
        {"ulong", "UInt64"},
        {"float", "Single"},
        {"double", "Double"},
        {"bool", "Boolean"},
        {"decimal", "Decimal"},
        {"char", "Char"},
        {"nint", "IntPtr"},
        {"nuint", "UIntPtr"},
    };
#>
namespace TeuJson;

public partial class JsonBinaryWriter 
{
    <#
        foreach (var type in types) 
        {
    #>
public override void WriteValue(<#=type.Key#> value)
    {
        writer.Write((byte)JsonHint.<#=type.Value#>);
        writer.Write(value);
    }
    <#
        }
    #>

}